{"version":3,"sources":["mangas.tsx","components/Modal/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mangas","id","name","image","Modal","props","className","text","onClick","restart","App","mangasPair","useState","sort","Math","random","mangasCards","setMangasCards","openCard","setOpenCard","matched","setMatched","tryNumber","setTryNumber","score","setScore","modal","result","setResult","useEffect","firstMatch","secondMatch","console","log","prevTry","length","setTimeout","map","manga","index","flipCard","includes","undefined","opened","handleFlip","src","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59a98697.chunk.js","sourcesContent":["export const mangas = [\r\n  { id: 1, name: \"naruto\", image: \"https://logos-marques.com/wp-content/uploads/2021/03/Naruto-Logo.png\" },\r\n  { id: 2, name: \"onepiece\", image: \"https://upload.wikimedia.org/wikipedia/fr/3/34/One_Piece_%28ja%29_Logo.svg\" },\r\n  { id: 3, name: \"bleach\", image: \"https://upload.wikimedia.org/wikipedia/fr/8/86/Bleach_%28manga%29_Logo.svg\" },\r\n  { id: 4, name: \"dragonball\", image: \"https://upload.wikimedia.org/wikipedia/fr/f/f2/Dragon_Ball_Z_Logo.svg\" },\r\n  { id: 5, name: \"hunterxhunter\", image: \"https://upload.wikimedia.org/wikipedia/commons/c/c8/Hunter_x_hunter.png\" },\r\n  { id: 6, name: \"myheroacademia\", image: \"https://lageekettesportive.com/wp-content/uploads/2019/03/boku_no_hero_academia-1.png\" },\r\n  { id: 7, name: \"fullmetalalchemist\", image: \"https://upload.wikimedia.org/wikipedia/fr/f/f9/FMA_Brotherhood.png\" },\r\n  { id: 8, name: \"deathnote\", image: \"https://upload.wikimedia.org/wikipedia/fr/b/b2/Death_Note_Logo.svg\" }\r\n];","import React from 'react'\r\nimport './Modal.css'\r\n\r\nconst Modal = (props: { text: string; restart: () => void }) => {\r\n  return (\r\n    <>\r\n      <div className=\"ModalContainer\">\r\n        <div className=\"Modal-text\">\r\n          {props.text}\r\n        </div>\r\n        <div className=\"Btn-Container\">\r\n          <button\r\n            className=\"Btn-Restart\"\r\n            onClick={() => props.restart()}>\r\n            Restart\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"Modal-bg\"></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { mangas } from './mangas';\nimport Modal from './components/Modal/Modal';\n\nconst App = () => {\n\n  const mangasPair = [...mangas, ...mangas];\n\n  const [mangasCards, setMangasCards] = useState(mangasPair.sort(() => Math.random() - 0.5))\n  const [openCard, setOpenCard] = useState([] as any)\n  const [matched, setMatched] = useState([] as any)\n  const [tryNumber, setTryNumber] = useState(15)\n  const [score, setScore] = useState(0)\n  const [result, setResult] = useState({ modal: false, text: '' })\n\n  useEffect(() => {\n    const firstMatch = mangasCards[openCard[0]];\n    const secondMatch = mangasCards[openCard[1]];\n\n    if (secondMatch && firstMatch.id === secondMatch.id) {\n      setMatched((matched: any) => [...matched, firstMatch.id]);\n      console.log(matched)\n    } else if (secondMatch && firstMatch.id !== secondMatch.id) {\n      setTryNumber((prevTry) => prevTry - 1)\n    }\n\n    if (openCard.length === 2) {\n      setTimeout(() => setOpenCard([]), 1000)\n    }\n\n  }, [openCard])\n\n  const handleFlip = (index: any) => {\n    setOpenCard((opened: any) => [...opened, index])\n  }\n\n  const shuffleCard = () => {\n    setMangasCards(mangasPair.sort(() => Math.random() - 0.5))\n  }\n\n  useEffect(() => {\n    if (tryNumber === 0) {\n      setResult({\n        modal: true,\n        text: 'You Lose !'\n      })\n      setScore(0)\n    } else if (matched.length === mangas.length) {\n      setResult({\n        modal: true,\n        text: 'You win !'\n      })\n      setScore((score) => score + 1)\n    }\n  }, [tryNumber, matched])\n\n\n  const restart = () => {\n    setMatched([])\n    setOpenCard([])\n    setResult({ modal: false, text: '' })\n    setTryNumber(15)\n    shuffleCard()\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <div className=\"info-game\">\n        <p>Score: <strong>{score}</strong></p>\n        <p>Try: <strong>{tryNumber}</strong></p>\n      </div>\n      <div className=\"cards\">\n        {mangasCards.map((manga, index) => {\n\n          let flipCard = false;\n\n          if (openCard.includes(index)) flipCard = true;\n\n          if (matched.includes(manga.id)) flipCard = true;\n\n          return (\n            <div className={`manga-card ${flipCard ? \"flipped\" : \"\"}`} key={index} onClick={flipCard ? undefined : () => handleFlip(index)}>\n              <div className=\"inner\">\n                <div className=\"front\">\n                  <img src={manga.image} alt={manga.name} width=\"100\" />\n                </div>\n                <div className=\"back\"></div>\n              </div>\n            </div>\n          )\n        })\n        }\n      </div>\n      {result.modal &&\n        <Modal text={result.text} restart={restart} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}